repositories {
    maven { url 'https://jitpack.io' }
}
configurations {
    zomboidDoc.extendsFrom zomboidRuntimeOnly
}
dependencies {
    // https://github.com/real-coco-labs/pz-zdoc
    zomboidDoc 'com.github.real-coco-labs:pz-zdoc:v2+'

    // ZomboidDoc compiled Lua library
    compileOnly files("lib/pz-zdoc-lua-$game_version" + '.jar')
}

def zomboidLuaJar = tasks.register('zomboidLuaJar', Jar.class) {
    it.description('Assembles a jar containing compiled lua classes.')
    it.setGroup('zomboid')

    it.archiveFileName = "pz-zdoc-lua-${game_version}.jar"
    it.destinationDir(file("$buildDir/libs"))
    it.from "$buildDir/generated/sources/zdoc/"
    it.into 'lib'
}
jar.dependsOn(zomboidLuaJar.get())

tasks.register('annotateZomboidLua', JavaExec.class) {
    it.description('Annotate vanilla Lua with EmmyLua.')
    it.setGroup('zomboid')

    it.classpath = configurations.zomboidImplementation + configurations.zomboidDoc
    it.main = 'io.yooksi.pz.zdoc.Main'
    it.args('annotate', '-i', "$gameDir/media/lua", '-o', "$buildDir/generated/sources/zdoc/media/lua")
}

tasks.register('compileZomboidLua', JavaExec.class) {
    it.description('Compile Lua library from modding API.')
    it.setGroup('zomboid')

    it.classpath = configurations.zomboidImplementation + configurations.zomboidDoc
    it.main = 'io.yooksi.pz.zdoc.Main'
    it.args('compile', '-i', "$gameDir", '-o', "$buildDir/generated/sources/zdoc/media/lua/shared/Library")
}
